<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>URL Scraping - Scrapet</title>

    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap"
      rel="stylesheet"
    />

    <style>
      html {
        scroll-behavior: smooth;
      }
      body {
        font-family: "Inter", sans-serif;
        background-color: #111827; /* Tailwind gray-900 */
        color: #f9fafb; /* Tailwind gray-50 */
        background-image: radial-gradient(#4b5563 0.5px, transparent 0.5px);
        background-size: 20px 20px;
      }
      .hero-gradient-text {
        background: linear-gradient(
          to right,
          #60a5fa,
          #a78bfa
        ); /* blue-400 to violet-400 */
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
      }
      .feature-card {
        background-color: rgba(31, 41, 55, 0.5); /* gray-800 with 50% opacity */
        backdrop-filter: blur(10px);
        border: 1px solid rgba(75, 85, 99, 0.5); /* gray-700 with 50% opacity */
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border-radius: 0.75rem; /* rounded-lg */
      }
      .feature-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.3),
          0 4px 6px -2px rgba(0, 0, 0, 0.15);
      }

      /* Custom Slider Styles */
      input[type="range"] {
        -webkit-appearance: none;
        appearance: none;
        width: 100%;
        height: 8px;
        background: #374151; /* gray-700 */
        border-radius: 5px;
        outline: none;
        transition: opacity 0.2s;
      }
      input[type="range"]::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        width: 20px;
        height: 20px;
        background: #60a5fa; /* blue-400 */
        border: 2px solid #f9fafb; /* gray-50 */
        border-radius: 50%;
        cursor: pointer;
        transition: background 0.3s ease;
      }
      input[type="range"]::-moz-range-thumb {
        width: 20px;
        height: 20px;
        background: #60a5fa; /* blue-400 */
        border: 2px solid #f9fafb; /* gray-50 */
        border-radius: 50%;
        cursor: pointer;
        transition: background 0.3s ease;
      }
      input[type="range"]::-webkit-slider-thumb:hover,
      input[type="range"]::-moz-range-thumb:hover {
        background: #a78bfa; /* violet-400 */
      }

      /* Custom Checkbox */
      .custom-checkbox-label {
        display: flex;
        align-items: center;
        cursor: pointer;
        font-medium: text-gray-300;
      }
      .custom-checkbox-input {
        opacity: 0;
        width: 0;
        height: 0;
      }
      .custom-checkbox-span {
        width: 20px;
        height: 20px;
        border: 2px solid #4b5563; /* gray-600 */
        background-color: #374151; /* gray-700 */
        border-radius: 4px;
        margin-right: 12px;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      /* Checkmark style */
      .custom-checkbox-span::after {
        content: "";
        display: block;
        width: 6px;
        height: 12px;
        border: solid #ffffff; /* white */
        border-width: 0 3px 3px 0;
        transform: rotate(45deg) translateY(-2px);
        opacity: 0;
        transition: opacity 0.2s ease;
      }
      /* Checked state */
      .custom-checkbox-input:checked ~ .custom-checkbox-span {
        background-color: #3b82f6; /* blue-600 */
        border-color: #3b82f6;
      }
      .custom-checkbox-input:checked ~ .custom-checkbox-span::after {
        opacity: 1;
      }
      /* Focus state */
      .custom-checkbox-input:focus ~ .custom-checkbox-span {
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.4);
      }
    </style>
  </head>
  <body class="antialiased">
    <div
      id="globalLoader"
      class="fixed inset-0 z-[99999] flex flex-col items-center justify-center bg-gray-900/80 backdrop-blur-sm transition-opacity duration-400 ease-out"
    >
      <video
        src="/public/assets/loading.mp4"
        autoplay
        muted
        loop
        style="width: 100px"
      ></video>
      <p class="text-lg text-gray-300 font-medium mt-2">Loading...</p>
    </div>

    <nav
      class="sticky top-0 z-50 bg-gray-900/60 backdrop-blur-lg border-b border-gray-700/50"
    >
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
          <div class="flex items-center">
            <a href="/" class="text-2xl font-bold text-white tracking-wider"
              >SCRAPET</a
            >
          </div>
          <div class="hidden md:block">
            <div class="ml-10 flex items-baseline space-x-4">
              <a
                href="/prompt"
                class="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium"
                >Prompt Scrapping</a
              >
              <a
                href="/url"
                class="bg-gray-700 text-white px-3 py-2 rounded-md text-sm font-medium"
                aria-current="page"
                >URL Scraping</a
              >
              <a
                href="/detector"
                class="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium"
                >AI Code Detection</a
              >
            </div>
          </div>
          <div class="-mr-2 flex md:hidden">
            <button
              id="mobile-menu-button"
              type="button"
              class="bg-gray-800 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white"
            >
              <span class="sr-only">Open main menu</span>
              <svg
                class="block h-6 w-6"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                aria-hidden="true"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 6h16M4 12h16M4 18h16"
                />
              </svg>
              <svg
                class="hidden h-6 w-6"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                aria-hidden="true"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          </div>
        </div>
      </div>
      <div class="md:hidden hidden" id="mobile-menu">
        <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
          <a
            href="/prompt"
            class="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium"
            >Prompt Scrapping</a
          >
          <a
            href="/url"
            class="bg-gray-700 text-white block px-3 py-2 rounded-md text-base font-medium"
            aria-current="page"
            >URL Scraping</a
          >
          <a
            href="/detector"
            class="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium"
            >AI Code Detection</a
          >
        </div>
      </div>
    </nav>

    <div class="main-content">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
        <header class="text-center mb-12">
          <h1
            class="text-4xl sm:text-5xl font-extrabold tracking-tight hero-gradient-text"
          >
            URL Scraper
          </h1>
          <p class="mt-4 text-lg sm:text-xl text-gray-400">
            Enter a URL to scrape its content.
          </p>
        </header>

        <main class="feature-card p-6 sm:p-8 space-y-6">
          <div>
            <label for="url" class="block text-gray-300 font-medium mb-2"
              >Webpage URL</label
            >
            <input
              type="text"
              id="url"
              placeholder="e.g., https://example.com"
              class="w-full p-3 bg-gray-800 border border-gray-700 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-200 placeholder-gray-500 transition-all duration-200"
            />
          </div>

          <div class="slider-container flex items-center space-x-4">
            <label
              for="volumeSlider"
              class="text-gray-300 font-medium whitespace-nowrap"
              >Search Depth:</label
            >
            <input
              type="range"
              id="volumeSlider"
              min="0"
              max="100"
              step="1"
              value="50"
              class="w-full"
            />
            <span
              class="slider-label bg-blue-600 text-white text-sm font-bold px-3 py-1 rounded-full w-12 text-center"
              id="volumeValue"
              >5</span
            >
          </div>

          <div class="checkbox-container pt-2">
            <label for="ecomCheckbox" class="custom-checkbox-label">
              <input
                type="checkbox"
                id="ecomCheckbox"
                class="custom-checkbox-input"
              />
              <span class="custom-checkbox-span"></span>
              Is this an e-commerce site?
            </label>
          </div>

          <div class="action-buttons pt-4">
            <button
              type="button"
              class="w-full px-8 py-3 font-semibold text-white bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg hover:from-blue-600 hover:to-purple-700 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
            >
              Scrape this page
            </button>
          </div>
        </main>
        <div
          class="content-container feature-card mt-12 p-6 sm:p-8 rounded-lg"
          style="display: none"
        >
          <div class="output-panel mb-8">
            <h3 class="text-2xl font-semibold text-white mb-4">Output:</h3>
            <div
              id="outputContent"
              class="bg-gray-800 rounded-lg p-6 min-h-[200px] border border-gray-700 text-gray-300"
            >
              <p class="placeholder-text text-gray-500">
                Your results will appear here...
              </p>
            </div>
          </div>
          <div class="question-panel">
            <label
              for="additionalPrompt"
              class="block text-lg font-medium text-gray-300 mb-3"
              >Ask a follow-up question:</label
            >
            <div class="input-group flex flex-col sm:flex-row gap-2">
              <input
                type="text"
                id="additionalPrompt"
                placeholder="Enter your question here..."
                class="flex-grow p-3 bg-gray-800 border border-gray-700 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-200 placeholder-gray-500 transition-all duration-200"
              />
              <button
                id="sendAdditionalPrompt"
                class="px-6 py-3 font-semibold text-white bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-blue-500"
              >
                Send
              </button>
            </div>
          </div>
        </div>

        <div
          id="loadingIndicator"
          class="fixed inset-0 bg-gray-900/80 backdrop-blur-sm flex flex-col items-center justify-center z-50"
          style="display: none"
        >
          <video
            id="loadingVideo"
            autoplay
            loop
            muted
            playsinline
            class="w-48 h-48"
          >
            <source src="/assets/loading.mp4" type="video/mp4" />
            Your browser does not support the video tag.
          </video>
          <p class="text-lg text-gray-300 font-medium mt-4">
            Scraping in progress...
          </p>
        </div>
      </div>
    </div>

    <!-- <script src="/URLscraping/urlscraping.js"></script> -->
    <script
      src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=67f2220a9e19e1e37a55ec03"
      type="text/javascript"
      integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.prod.website-files.com/67f2220a9e19e1e37a55ec03/js/webflow.a9ba356d.fac71e56d365963b.js"
      type="text/javascript"
    ></script>
    <!-- <script>
      // --- Page Load Animation ---
      window.addEventListener("load", () => {
        const loader = document.getElementById("globalLoader");
        if (loader) {
          loader.style.opacity = "0";
          setTimeout(() => (loader.style.display = "none"), 400); // wait for fade-out
        }
      });

      // --- Mobile Menu Toggle ---
      const mobileMenuButton = document.getElementById("mobile-menu-button");
      const mobileMenu = document.getElementById("mobile-menu");
      const hamburgerIcon = mobileMenuButton.querySelector("svg:first-child");
      const closeIcon = mobileMenuButton.querySelector("svg:last-child");

      mobileMenuButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
        hamburgerIcon.classList.toggle("hidden");
        closeIcon.classList.toggle("hidden");
      });

      // --- Slider Value Update ---
      const slider = document.getElementById("volumeSlider");
      const sliderValue = document.getElementById("volumeValue");
      slider.oninput = function () {
        sliderValue.textContent = Math.ceil(this.value / 10);
      };
    </script> -->
    <script>
      // --- All logic wrapped in DOMContentLoaded ---
      document.addEventListener("DOMContentLoaded", () => {
        // --- Page Load Animation ---
        const loader = document.getElementById("globalLoader");
        if (loader) {
          loader.style.opacity = "0";
          setTimeout(() => (loader.style.display = "none"), 400); // wait for fade-out
        }

        // --- Mobile Menu Toggle ---
        const mobileMenuButton = document.getElementById("mobile-menu-button");
        const mobileMenu = document.getElementById("mobile-menu");
        const hamburgerIcon = mobileMenuButton.querySelector("svg:first-child");
        const closeIcon = mobileMenuButton.querySelector("svg:last-child");

        if (mobileMenuButton) {
          mobileMenuButton.addEventListener("click", () => {
            mobileMenu.classList.toggle("hidden");
            hamburgerIcon.classList.toggle("hidden");
            closeIcon.classList.toggle("hidden");
          });
        }

        // --- Slider Value Update ---
        const slider = document.getElementById("volumeSlider");
        const sliderValue = document.getElementById("volumeValue");

        if (slider) {
          slider.oninput = function () {
            sliderValue.textContent = Math.ceil(this.value / 10);
          };
        }

        // --- Scrape Button Logic (UPDATED) ---

        // 1. Select all elements
        const scrapeButton = document.querySelector(".action-buttons button");
        const urlInput = document.getElementById("url");
        const depthSlider = document.getElementById("volumeSlider");
        const ecomCheckbox = document.getElementById("ecomCheckbox");

        // [NEW] Selectors for output/loading
        const loadingIndicator = document.getElementById("loadingIndicator");
        const mainContent = document.querySelector(".main-content");
        const outputContainer = document.querySelector(".content-container");
        const outputContent = document.getElementById("outputContent");
        const mainForm = document.querySelector("main.feature-card");

        if (scrapeButton) {
          // 2. Add ASYNC click listener
          scrapeButton.addEventListener("click", async () => {
            // 3. Get all values
            const targetUrl = urlInput.value.trim();
            const searchDepth = depthSlider.value;
            const isEcommerce = ecomCheckbox.checked;

            // 4. Validation
            if (!targetUrl) {
              alert("Please enter a URL before scraping.");
              urlInput.focus();
              return;
            }

            // 5. Log to console (as before)
            console.clear();
            console.log("======= URL SCRAPE REQUEST (Sending) =======");
            const scrapeData = { targetUrl, searchDepth, isEcommerce };
            console.log(scrapeData);
            console.log("============================================");

            // 6. [NEW] Send data to backend
            try {
              // Show loading
              loadingIndicator.style.display = "flex";
              mainContent.classList.add("blur-sm");

              const response = await fetch("/scrapeUrl", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify(scrapeData),
              });

              if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
              }

              const result = await response.json();
              console.log("Backend Response:", result);

              // 7. [NEW] Display results
              const formattedOutput = (text) => {
                let safeText = document.createElement("div");
                safeText.textContent = text;
                return safeText.innerHTML.replace(/\n/g, "<br />");
              };

              outputContent.innerHTML = formattedOutput(result.output);
              outputContent.classList.remove("text-gray-500");

              // Show output, hide form
              outputContainer.style.display = "block";
              mainForm.style.display = "none";
            } catch (error) {
              console.error("Error fetching scrape data:", error);
              outputContent.innerHTML = `<p class="text-red-400">Error: ${error.message}. Please check the console.</p>`;
              outputContainer.style.display = "block";
              outputContent.classList.remove("text-gray-500");
            } finally {
              // Hide loading
              loadingIndicator.style.display = "none";
              mainContent.classList.remove("blur-sm");
            }
          });
        }
      });
    </script>
  </body>
</html>
